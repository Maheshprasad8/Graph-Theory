Given a 2D grid consists of 0s (land) and 1s (water).  An island is a maximal 4-directionally connected group of 0s and 
a closed island is an island totally (all left, top, right, bottom) surrounded by 1s.

Return the number of closed islands.

..........................DFS && BFS................................................

class Solution {
public:
int m,n;
bool dfs(vector<vector<int>>& grid,int r,int c){
if(r>=m || r<0 || c>=n || c<0){
    return false;
}
if(grid[r][c]==1){
    return true;
}
grid[r][c]=1; //mark viisted
bool left=dfs(grid,r,c-1);
bool right=dfs(grid,r,c+1);
bool Up=dfs(grid,r-1,c);
bool down=dfs(grid,r+1,c);
return left && right && Up && down;
}

    int closedIsland(vector<vector<int>>& grid) {
         m=grid.size();
         n=grid[0].size();
        int cnt=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==0){
                    if(dfs(grid,i,j)==true){
                        cnt++;
                    }
                }
            }
        }
        return cnt;
    }
};
