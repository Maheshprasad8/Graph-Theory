1319. Number of Operations to Make Network Connected
Solved
Medium
Topics
Companies
Hint
There are n computers numbered from 0 to n - 1 connected by ethernet cables connections forming a network where
connections[i] = [ai, bi] represents a connection between computers ai and bi. Any computer can reach any other computer directly or indirectly through the network.

You are given an initial computer network connections. You can extract certain cables between two directly connected computers, 
and place them between any pair of disconnected computers to make them directly connected.

Return the minimum number of times you need to do this in order to make all the computers connected. If it is not possible, return -1.

..........................................solution b y DSU.............................................

class Solution {
public:
    vector<int> parent;
    vector<int> rank;
    int find(int x) {
        if (x == parent[x]) {
            return x;
        }
        return parent[x] = find(parent[x]);
    }

    void Union(int x, int y) {
        int x_parent = find(x);
        int y_parent = find(y);
        if (x_parent == y_parent) {
            return;
        }
        if (rank[x_parent] > rank[y_parent]) {
            parent[y_parent] = x_parent;
        } else if (rank[y_parent] > rank[x_parent]) {
            parent[x_parent] = y_parent;
        } else {
            // kosi ko parent bna do
            parent[x_parent] = y_parent;
            rank[y_parent] += 1;
        }
    }
    int makeConnected(int n, vector<vector<int>>& connections) {
        parent.resize(n);
        rank.resize(n, 0);
        if (connections.size() < n - 1) {
            return -1; // impossible to make connection
        }
        for (int i = 0; i < n; i++) 
            parent[i] = i;

            int components = n;
            for (auto& vec : connections) {
                if (find(vec[0]) != find(vec[1])) {
                    Union(vec[0], vec[1]);
                    components--;
                }
            }
        
        return components - 1;
    }
};
